# TIL   / date
  ## Unity
    ### ### < C# >


> Summary
-
-
-
-

### C#
> Expain shortly

설명


```
Typing Code

```

### C#
> Expain shortly

설명


```
Typing Code

```


다이렉트 X

비주얼에서 Direct X

샘플 파일 받고,
c++ 빈프로젝트추가
프로젝트 속성에
VC++ 디렉터리
포함 디렉터리
SDK Include 폴더 추가

vertex shader 는 점에대해서 연산




pixel 은 색에대해서  연산하고

사용하는 쉐이더 파일을 한번 바꾸면 일괄적으로 바뀐다,.

레스터라이져

vertex 점 3개를 찍었을때
그래픽카드가 픽셀처리를 자동으로 해줌.

이후 픽셀쉐이더 단계에서 각 픽셀마다 색상을 돌려줌

Shader4 일때는


레스터라이저 단계에서
PShader
각 RGB값을 설정해줄수있음

샘플 6
삼각형이 회전 하는 샘플
매트릭스(행렬)


상수버퍼
CONST BUFFER

cbuffer 로 선언을 함.
float4x4 matFinal
c++ 에서 전달해주어
쉐이더와 c++ 양방향으로 데이터 전달이 가능

Scale ,Rotate, Transfoam
이동행렬 회전행렬 크기행렬을  한번에 해결해줌.

그래픽카드는 하드웨어적으로 계산해서 행렬 사용시 거의 손실이 없다.

3D 를 위해선 카메라를 만들어줘야됨.
기본적으로 카메라의 위치 어디를 바라보는지, 위쪽이 어디인가 를 설정.

렌즈설정을 통해 화각을 ㅓㅇ정해ㅓ 줌인아웃을 지정,
해상도를 설저으  near view를 통해, 근거리뷰, 원거리뷰 설정을 통해 보여줄 오브젝트들을 설정함.

원거리뷰 나 근거리 뷰의 수치에 넘어가거나 적으면 안보이게됨, 이를 자연스럽게 하기위해 원거리에서는 안개를 깔아줌


vOUT 에서
POSITION 과 COLOR를 설정가능.


이론적인 부분
다이렉트 X에서 카메라와 카메라의 일정 화각이 있고, 오브젝트가 이다고 하자.

유니티의 경우 오브젝트의 오더레이어에 따라서 보이는 순서가 결정되지만
다이렉트 X는 일일히 설정
해줘야한다.
그렇지 않으면 제일마지막 부터 그려진다.

이를 Z-buffer , 혹은 depth-buffer 라고 한다.

UI의 경우 Z버퍼를 끄고 세팅, 오브젝트의 경우 Z버퍼를 켜고 설정해줘야 오브젝트가 UI를 가리는 경우가 생기지 않는다.

즉 여러가지 오브젝트들이 겹치는 경우가 있기에 그에따라 Z-buffer 를 켜거나 꺼줘야한다,.

- 빛의 종류

주변광 - 예를 들어 태양빛을 받았을때 그림자가 완전히 어둡지 않다. 이를 산란이나 분산에 따라 빛이 그림자에 생기는 것인데, 이름 통틀어서 주변광이라고 한다.
혹은 환경, Ambient Light라고 한다.

연산이 거의 없지만 명암이 없기에 단조로워 보인다.

한마디로 아무리 광원이 없어도 빛이 존재하는것/

직사광  - Directional Light

위치는 존재하지않고 방향만 존재하는 빛.
어느 위치에서라도 일정한 방향을 가지는 빛. 태양.

이 방향을 받은 존재만 연산을 한다.

Point Light - 횟불이나 전구같은것.
위치는 있지만 방향은 존재하지않는것.
사방으로 퍼져나가는 빛.
연산이 조금 더 느림.
감쇄가 이루어져서 느리기 때문인데 세가지 정도의 감쇄의 효과가 있다.
1) 일정거리까지 밝다가 거리에 따라 어두워 지던지.
그래서 어느정도 거리를 벗어나면 빛이 없어짐.

Spot Light -
비용을 많이 먹어서 거의 안쓴다.
방향 위치 모두 존재함.
예를 들어 손전등,
광원 가운데는 빛이 세고,  주변은 약한것.

멀어지면 감쇄.
각도에 따라 빛이 받는 양이 다름

그렇기 때문에 인게임에서 플래쉬 효과를 낼때에는 이미지를 넣고 블렌드 효과를 준다.

- 자체발광.


빛의 속성에 대해

- 빛의 속성

Difuse = 빛의 색상
Amibient 가 포함됨.( 빛이 받지않는 곳은 무슨색상으로 할것인지)

Specular =
제일 밝게 반사되는 반사광이 무슨색상인지.

각 물체들은 Meterial 이 있다.
Meterial 에 따라서 반사가 달라짐.

빛이 많아질수록 느려짐


-Texture 에 대하여,
vertex+RGB * UV

UV == XY,
UV좌표를 입력해서 원하는곳의 텍스쳐를 입힐수있다.

디렉셔널 라이트

색을 바꾸면 빛을 바꾸는 부분만 바뀌고,

주변색은 바뀌지않음.
주변색은 Ambient Light 로 바꿈

3dObject - Terrian

Terrian albedo Texture 에 사용할
 텍스쳐를 넣어줌.

오른쪽 Normal map 은 쉐이더 기법중 하나로,

이미지에 높이 정보가 들어있는 이미지

이바각 바나각을 계산해줘서
