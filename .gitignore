## Visual Studio 임시 파일을 무시하고 결과를 빌드 한 다음
## 유명한 Visual Studio 부가 기능에 의해 생성 된 파일.

# 사용자 별 파일
* .suo
*.사용자
* .userosscache
* .sln.docstates

# 사용자 별 파일 (MonoDevelop / Xamarin Studio)
* .userprefs

# 결과 빌드
[Dd] ebug /
[Dd] ebugPublic /
[rr] elease /
[Rr] eleases /
x64 /
x86 /
bld /
[Bb] in /
[Oo] bj /

# Visual Studio 2015 캐시 / 옵션 디렉토리
.vs /
# wwwroot에서 프로젝트의 정적 파일을 만드는 작업의 주석 처리를 취소하십시오.
# wwwroot /

# MSTest 테스트 결과
[Tt] est [Rr] esult * /
[Bb] [Ll] og. *

# NUNIT
* .VisualState.xml
TestResult.xml

# ATL 프로젝트의 결과 빌드
[Dd] ebugPS /
[Rr] eleasePS /
dlldata.c

# DNX
project.lock.json
유물 /

* _i.c
* _p.c
* _i.h
* .ilk
* .meta
* .obj
* .pch
* .pdb
* .pgc
* .pgd
* .rsp
* .sbr
* .tlb
* .tli
* .tlh
* .tmp
* .tmp_proj
*.로그
* .vspscc
* .vssscc
. 빌드
* .pidb
* .svclog
* .scc

# Chutzpah 테스트 파일
_Chutzpah *

# Visual C ++ 캐시 파일
ipch /
* .aps
* .ncb
* .opendb
* .opensdf
* .sdf
* .cachefile

# Visual Studio 프로파일 러
* .pess
* .vsp
* .vspx
*.수액

# TFS 2012 로컬 작업 공간
$ tf /

# Guidance Automation Toolkit
* .gp 상태

# ReSharper는 .NET 코딩 추가 기능입니다.
_ReSharper * /
*. [Rr] e [Ss] harper
* .DotSettings.user

# JustCode는 .NET 코딩 추가 기능입니다.
. JustCode

# TeamCity는 빌드 추가 기능입니다.
_TeamCity *

# DotCover는 코드 커버리지 도구입니다.
* .dotCover

# NCrunch
_NCrunch_ *
. * crunch * .local.xml
nCrunchTemp_ *

# MightyMose
* .mm. *
AutoTest.Net/

# 웹 작업대 (sass)
.sass-cache /

# Installshield 출력 폴더
[예] xpress /

# DocProject는 문서 생성기 추가 기능입니다.
DocProject / buildhelp /
DocProject / Help / * .HxT
DocProject / Help / * .HxC
DocProject / Help / * .hhc
DocProject / Help / * .hhk
DocProject / Help / * .hhp
DocProject / Help / Html2
DocProject / Help / html

# Click-Once 디렉토리
게시 /

# 웹 출력 게시
*. [Pp] ublish.xml
* .azurePubxml
# TODO : 웹 배포 설정을 확인하려면 다음 행에 주석을 답니다. 
#하지만 데이터베이스 연결 문자열 (잠재적 인 암호 포함)은 암호화되지 않습니다.
* .pubxml
* .publishproj

# NuGet 패키지
* .nupkg
# 패키지 폴더 때문에 패키지 복원을 무시할 수 있습니다
** / packages / *
# except build /는 MSBuild 대상으로 사용됩니다.
! ** / packages / build /
# 필요한 경우 주석을 제거하십시오. 일반적으로 필요할 때 재생성됩니다.
#! ** / packages / repositories.config
# NuGet v3의 project.json 파일이 더 많은 무시할 수있는 파일을 생성합니다.
* .nuget.props
* .nuget.targets

# Microsoft Azure 빌드 출력
csx /
* .build.csdef

# Microsoft Azure 에뮬레이터
ecf /
rcf /

# Microsoft Azure ApplicationInsights 구성 파일
ApplicationInsights.config

# Windows Store 앱 패키지 디렉토리
AppPackages /
번들 아티팩트 /

# Visual Studio 캐시 파일
.cache로 끝나는 # 개 파일은 무시할 수 있습니다.
*. [Cc] 통증
# .cache로 끝나는 디렉토리 추적.
! *. [Cc] 통증 /

# 기타
ClientBin /
~ $ *
* ~
* .dbmdl
* .dbproj.schemaview
* .pfx
*. 게시 설정
node_modules /
orleans.codegen.cs

# RIA / Silverlight 프로젝트
생성 된 코드 /

# 이전 프로젝트 파일 변환에서 파일 백업 및보고
#보다 새로운 Visual Studio 버전. 백업 파일이 필요하지 않습니다.
# 왜냐하면 우리는 자식이 있기 때문에 ;-)
_UpgradeReport_Files /
지원*/
UpgradeLog * .XML
UpgradeLog * .htm

# SQL Server 파일
* .mdf
* .ldf

# 비즈니스 인텔리전스 프로젝트
* .rdl.data
* .bim.layout
* .bim _ *. 설정

# Microsoft Fakes
가짜 어셈블리 /

# GhostDoc 플러그인 설정 파일
* .GhostDoc.xml

# Node.js Visual Studio 도구
.ntvs_analysis.dat

# Visual Studio 6 빌드 로그
* .plg

# Visual Studio 6 작업 영역 옵션 파일
*.고르다

# Visual Studio LightSwitch 빌드 출력
** / *. HTMLClient / GeneratedArtifacts
** / *. DesktopClient / GeneratedArtifacts
** / *. DesktopClient / ModelManifest.xml
** / *. 서버 / GeneratedArtifacts
** / *. Server / ModelManifest.xml
_Pvt_Extensions

# 패키지 종속성 관리자
.paket / paket.exe

# FAKE - F # Make
.모조품/